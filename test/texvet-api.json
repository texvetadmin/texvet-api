{
  "info": {
    "_postman_id": "cbdea6fe-c686-4d9d-a87b-48d02e4d0bad",
    "name": "TEXVET-API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "resources",
      "item": [
        {
          "name": "the-hazlewood-act",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7f509771-16ab-4898-ab33-c6d06bcb22bb",
                "exec": [
                  "pm.test(\"Should Succeed\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(pm.response).to.have.status(200);",
                  "    pm.expect(jsonData.statusCode).to.equal(200);",
                  "});",
                  "",
                  "pm.test(\"Should not be empty\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.message).to.not.be.null;",
                  "    pm.expect(jsonData.message._id).to.not.be.empty;",
                  "    pm.expect(jsonData.message.name).to.not.be.empty;",
                  "    pm.expect(jsonData.message.headline).to.not.be.empty;",
                  "    pm.expect(jsonData.message.body).to.not.be.empty;",
                  "    pm.expect(jsonData.message.url).to.not.be.empty;",
                  "});",
                  "",
                  "pm.test(\"Should retrieve appropriate resource\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.message.slug).to.equal(\"the-hazlewood-act\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{API_BASE_URL}}/public/v1/fulfillments/resources/the-hazlewood-act",
              "host": ["{{API_BASE_URL}}"],
              "path": [
                "public",
                "v1",
                "fulfillments",
                "resources",
                "the-hazlewood-act"
              ]
            }
          },
          "response": []
        },
        {
          "name": "free-park-pass",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0a651bed-92a2-4d47-82c3-65408cf80c75",
                "exec": [
                  "pm.test(\"Should Succeed\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(pm.response).to.have.status(200);",
                  "    pm.expect(jsonData.statusCode).to.equal(200);",
                  "});",
                  "",
                  "pm.test(\"Should not be empty\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.message).to.not.be.null;",
                  "    pm.expect(jsonData.message._id).to.not.be.empty;",
                  "    pm.expect(jsonData.message.name).to.not.be.empty;",
                  "    pm.expect(jsonData.message.headline).to.not.be.empty;",
                  "    pm.expect(jsonData.message.body).to.not.be.empty;",
                  "    pm.expect(jsonData.message.url).to.not.be.empty;",
                  "});",
                  "",
                  "pm.test(\"Should retrieve appropriate resource\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.message.slug).to.equal(\"free-park-pass\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{API_BASE_URL}}/public/v1/fulfillments/resources/free-park-pass",
              "host": ["{{API_BASE_URL}}"],
              "path": [
                "public",
                "v1",
                "fulfillments",
                "resources",
                "free-park-pass"
              ]
            }
          },
          "response": []
        },
        {
          "name": "reduced-fee-sporting-license",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "813cadef-09fd-4ec5-b749-b3c4e307f9bd",
                "exec": [
                  "pm.test(\"Should Succeed\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(pm.response).to.have.status(200);",
                  "    pm.expect(jsonData.statusCode).to.equal(200);",
                  "});",
                  "",
                  "pm.test(\"Should not be empty\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.message).to.not.be.null;",
                  "    pm.expect(jsonData.message._id).to.not.be.empty;",
                  "    pm.expect(jsonData.message.name).to.not.be.empty;",
                  "    pm.expect(jsonData.message.headline).to.not.be.empty;",
                  "    pm.expect(jsonData.message.body).to.not.be.empty;",
                  "    pm.expect(jsonData.message.url).to.not.be.empty;",
                  "});",
                  "",
                  "pm.test(\"Should retrieve appropriate resource\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.message.slug).to.equal(\"reduced-fee-sporting-license\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{API_BASE_URL}}/public/v1/fulfillments/resources/reduced-fee-sporting-license",
              "host": ["{{API_BASE_URL}}"],
              "path": [
                "public",
                "v1",
                "fulfillments",
                "resources",
                "reduced-fee-sporting-license"
              ]
            }
          },
          "response": []
        },
        {
          "name": "property-taxes",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9b9d975e-b442-4662-baf5-a8a4dfb829b9",
                "exec": [
                  "pm.test(\"Should Succeed\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(pm.response).to.have.status(200);",
                  "    pm.expect(jsonData.statusCode).to.equal(200);",
                  "});",
                  "",
                  "pm.test(\"Should not be empty\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.message).to.not.be.null;",
                  "    pm.expect(jsonData.message._id).to.not.be.empty;",
                  "    pm.expect(jsonData.message.name).to.not.be.empty;",
                  "    pm.expect(jsonData.message.headline).to.not.be.empty;",
                  "    pm.expect(jsonData.message.body).to.not.be.empty;",
                  "    pm.expect(jsonData.message.url).to.not.be.empty;",
                  "});",
                  "",
                  "pm.test(\"Should retrieve appropriate resource\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.message.slug).to.equal(\"property-taxes\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{API_BASE_URL}}/public/v1/fulfillments/resources/property-taxes",
              "host": ["{{API_BASE_URL}}"],
              "path": [
                "public",
                "v1",
                "fulfillments",
                "resources",
                "property-taxes"
              ]
            }
          },
          "response": []
        },
        {
          "name": "drivers-license-veteran-designation",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7939e85b-ffca-4adc-8d0b-8d3bb36f2475",
                "exec": [
                  "pm.test(\"Should Succeed\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(pm.response).to.have.status(200);",
                  "    pm.expect(jsonData.statusCode).to.equal(200);",
                  "});",
                  "",
                  "pm.test(\"Should not be empty\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.message).to.not.be.null;",
                  "    pm.expect(jsonData.message._id).to.not.be.empty;",
                  "    pm.expect(jsonData.message.name).to.not.be.empty;",
                  "    pm.expect(jsonData.message.headline).to.not.be.empty;",
                  "    pm.expect(jsonData.message.body).to.not.be.empty;",
                  "    pm.expect(jsonData.message.url).to.not.be.empty;",
                  "});",
                  "",
                  "pm.test(\"Should retrieve appropriate resource\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.message.slug).to.equal(\"drivers-license-veteran-designation\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{API_BASE_URL}}/public/v1/fulfillments/resources/drivers-license-veteran-designation",
              "host": ["{{API_BASE_URL}}"],
              "path": [
                "public",
                "v1",
                "fulfillments",
                "resources",
                "drivers-license-veteran-designation"
              ]
            }
          },
          "response": []
        },
        {
          "name": "free-toll-roads",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "148b78cd-af7a-48de-ab3a-0127087b38dc",
                "exec": [
                  "pm.test(\"Should Succeed\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(pm.response).to.have.status(200);",
                  "    pm.expect(jsonData.statusCode).to.equal(200);",
                  "});",
                  "",
                  "pm.test(\"Should not be empty\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.message).to.not.be.null;",
                  "    pm.expect(jsonData.message._id).to.not.be.empty;",
                  "    pm.expect(jsonData.message.name).to.not.be.empty;",
                  "    pm.expect(jsonData.message.headline).to.not.be.empty;",
                  "    pm.expect(jsonData.message.body).to.not.be.empty;",
                  "    pm.expect(jsonData.message.url).to.not.be.empty;",
                  "});",
                  "",
                  "pm.test(\"Should retrieve appropriate resource\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.message.slug).to.equal(\"free-toll-roads\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{API_BASE_URL}}/public/v1/fulfillments/resources/free-toll-roads",
              "host": ["{{API_BASE_URL}}"],
              "path": [
                "public",
                "v1",
                "fulfillments",
                "resources",
                "free-toll-roads"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "drupal",
      "item": [
        {
          "name": "referrals - mvpn (TRAVIS + ALL COUNTIES)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "50397b94-4e5b-472b-8e6a-4abe1874ef41",
                "exec": [
                  "pm.test(\"Should Succeed\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(pm.response).to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Should not be empty\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData).to.be.an('array').that.is.not.empty;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "I like ice cream.",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "texvet_webmaster",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{DRUPAL_URL}}/rest/v1/content/resources/referrals/mvpn/25270+37953",
              "host": ["{{DRUPAL_URL}}"],
              "path": [
                "rest",
                "v1",
                "content",
                "resources",
                "referrals",
                "mvpn",
                "25270+37953"
              ]
            }
          },
          "response": []
        },
        {
          "name": "referrals - mvpn (TRAVIS)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "50397b94-4e5b-472b-8e6a-4abe1874ef41",
                "exec": [
                  "pm.test(\"Should Succeed\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(pm.response).to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Should not be empty\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData).to.be.an('array').that.is.not.empty;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "I like ice cream.",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "texvet_webmaster",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{DRUPAL_URL}}/rest/v1/content/resources/referrals/mvpn/25270",
              "host": ["{{DRUPAL_URL}}"],
              "path": [
                "rest",
                "v1",
                "content",
                "resources",
                "referrals",
                "mvpn",
                "25270"
              ]
            }
          },
          "response": []
        },
        {
          "name": "referrals - vcso (TRAVIS + ALL COUNTIES)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "50397b94-4e5b-472b-8e6a-4abe1874ef41",
                "exec": [
                  "pm.test(\"Should Succeed\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(pm.response).to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Should not be empty\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData).to.be.an('array').that.is.not.empty;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "I like ice cream.",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "texvet_webmaster",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{DRUPAL_URL}}/rest/v1/content/resources/referrals/cvso/25270+37953",
              "host": ["{{DRUPAL_URL}}"],
              "path": [
                "rest",
                "v1",
                "content",
                "resources",
                "referrals",
                "cvso",
                "25270+37953"
              ]
            }
          },
          "response": []
        },
        {
          "name": "referrals - vcso (TRAVIS)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "50397b94-4e5b-472b-8e6a-4abe1874ef41",
                "exec": [
                  "pm.test(\"Should Succeed\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(pm.response).to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Should not be empty\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData).to.be.an('array').that.is.not.empty;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "I like ice cream.",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "texvet_webmaster",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{DRUPAL_URL}}/rest/v1/content/resources/referrals/cvso/25270",
              "host": ["{{DRUPAL_URL}}"],
              "path": [
                "rest",
                "v1",
                "content",
                "resources",
                "referrals",
                "cvso",
                "25270"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "webhooks",
      "item": [
        {
          "name": "dialogflow-webhook",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9a9dacf7-ffcc-4e9d-b611-ed51d874ddfa",
                "exec": [
                  "pm.test(\"Should Succeed\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(pm.response).to.have.status(200);",
                  "    pm.expect(jsonData.statusCode).to.be.equal(200);",
                  "});",
                  "",
                  "pm.test(\"Should not be empty\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.message).to.not.be.null;",
                  "    pm.expect(jsonData.message).to.be.an('object');",
                  "    pm.expect(jsonData.message.fulfillmentText).to.not.be.empty;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"responseId\": \"ea3d77e8-ae27-41a4-9e1d-174bd461b68c\",\n  \"session\": \"projects/your-agents-project-id/agent/sessions/88d13aa8-2999-4f71-b233-39cbf3a824a0\",\n  \"queryResult\": {\n    \"queryText\": \"user's original query to your agent\",\n    \"parameters\": {\n      \"param\": \"param value\"\n    },\n    \"allRequiredParamsPresent\": true,\n    \"fulfillmentText\": \"Text defined in Dialogflow's console for the intent that was matched\",\n    \"fulfillmentMessages\": [\n      {\n        \"text\": {\n          \"text\": [\n            \"Text defined in Dialogflow's console for the intent that was matched\"\n          ]\n        }\n      }\n    ],\n    \"outputContexts\": [\n      {\n        \"name\": \"projects/your-agents-project-id/agent/sessions/88d13aa8-2999-4f71-b233-39cbf3a824a0/contexts/generic\",\n        \"lifespanCount\": 5,\n        \"parameters\": {\n          \"param\": \"param value\"\n        }\n      }\n    ],\n    \"intent\": {\n      \"name\": \"projects/your-agents-project-id/agent/intents/29bcd7f8-f717-4261-a8fd-2d3e451b8af8\",\n      \"displayName\": \"Matched Intent Name\"\n    },\n    \"intentDetectionConfidence\": 1,\n    \"diagnosticInfo\": {},\n    \"languageCode\": \"en\"\n  },\n  \"originalDetectIntentRequest\": {}\n}"
            },
            "url": {
              "raw": "{{API_BASE_URL}}/auth/v1/fulfillments/dialogflow-webhook",
              "host": ["{{API_BASE_URL}}"],
              "path": ["auth", "v1", "fulfillments", "dialogflow-webhook"]
            }
          },
          "response": []
        },
        {
          "name": "send-email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"from\": \"miguel@inventive.io\",\n\t\"to\": \"miguel@inventive.io\",\n\t\"subject\": \"This is a test\",\n\t\"body\": \"this is a test...\"\n}"
            },
            "url": {
              "raw": "{{API_BASE_URL}}/public/v1/send-email",
              "host": ["{{API_BASE_URL}}"],
              "path": ["public", "v1", "send-email"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "fulfillments",
      "item": [
        {
          "name": "services - if given slug is a not valid service category",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "",
                "exec": [
                  "pm.test(\"Should fail\", function() {",
                  "var jsonData = pm.response.json();",
                  "pm.expect(jsonData.message).to.not.be.null;",
                  "pm.expect(jsonData.message).to.equal('Sorry, something went wrong! Please try again later.');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{API_BASE_URL}}/public/v1/fulfillments/services/invalid-category/noname",
              "host": ["{{API_BASE_URL}}"],
              "path": [
                "public",
                "v1",
                "fulfillments",
                "services",
                "invalid-category",
                "noname"
              ]
            }
          },
          "response": []
        },
        {
          "name": "services - (VA-CLAIMS/ELKHART)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "",
                "exec": [
                  "pm.test('Should Succeed', function() {",
                  "var jsonData = pm.response.json();",
                  "pm.expect(pm.response).to.have.status(200);",
                  "pm.expect(jsonData.statusCode).to.be.equal(200);",
                  "});",
                  "pm.test('Should not be empty', function() {",
                  "var jsonData = pm.response.json();",
                  "var path = pm.request.url.path; ",
                  "var param = path[5].toUpperCase();",
                  "pm.expect(path).to.be.an('array').that.is.not.empty;",
                  "pm.expect(param).to.be.a('string');",
                  "pm.expect(param).to.equal('ELKHART');",
                  "pm.expect(jsonData.message).to.not.be.null;",
                  "pm.expect(jsonData.message).to.be.an('array').that.is.not.empty;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{API_BASE_URL}}/public/v1/fulfillments/services/va-claims/elkhart",
              "host": ["{{API_BASE_URL}}"],
              "path": [
                "public",
                "v1",
                "fulfillments",
                "services",
                "va-claims",
                "elkhart"
              ]
            }
          },
          "response": []
        },
        {
          "name": "services - (VA-CLAIMS ANDERSON)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "",
                "exec": [
                  "pm.test('Should Succeed', function() {var jsonData = pm.response.json();",
                  "pm.expect(pm.response).to.have.status(200);",
                  "pm.expect(jsonData.statusCode).to.be.equal(200);",
                  "});",
                  "pm.test('Should not be empty', function() {",
                  "var jsonData = pm.response.json();",
                  "var path = pm.request.url.path; ",
                  "var param = path[5].split('+')[0].toUpperCase();",
                  "pm.expect(path).to.be.an('array').that.is.not.empty;",
                  "pm.expect(param).to.be.a('string');",
                  "pm.expect(param).to.equal('ANDERSON');",
                  "pm.expect(jsonData.message).to.not.be.null;",
                  "pm.expect(jsonData.message).to.be.an('array').that.is.not.empty;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{API_BASE_URL}}/public/v1/fulfillments/services/va-claims/anderson",
              "host": ["{{API_BASE_URL}}"],
              "path": [
                "public",
                "v1",
                "fulfillments",
                "services",
                "va-claims",
                "anderson"
              ]
            }
          },
          "response": []
        },
        {
          "name": "referrals - (CVSO NONAME)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "",
                "exec": [
                  "pm.test(\"Should Succeed\", function() {var jsonData = pm.response.json();",
                  "pm.expect(pm.response).to.have.status(200);",
                  "pm.expect(jsonData.statusCode).to.be.equal(200);",
                  "});",
                  "",
                  "pm.test(\"Should not be empty\", function() {",
                  "var jsonData = pm.response.json();",
                  "pm.expect(jsonData.message).to.not.be.null;",
                  "pm.expect(jsonData.message).to.be.an('array').that.is.not.empty;",
                  "});",
                  "",
                  "pm.test(\"If given location is invalid county or city name\", function() {",
                  "var path = pm.request.url.path; ",
                  "var param = path[5].split('+')[0].toUpperCase();",
                  "pm.expect(path).to.be.an('array').that.is.not.empty;",
                  "pm.expect(param).to.be.a('string');",
                  "pm.expect(param).to.equal('NONAME');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{API_BASE_URL}}/public/v1/fulfillments/referrals/cvso/noname",
              "host": ["{{API_BASE_URL}}"],
              "path": [
                "public",
                "v1",
                "fulfillments",
                "referrals",
                "cvso",
                "noname"
              ]
            }
          },
          "response": []
        },
        {
          "name": "referrals - cvso (ALL COUNTIES + ELKHART)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "",
                "exec": [
                  "pm.test(\"Should Succeed\", function() {var jsonData = pm.response.json();",
                  "pm.expect(pm.response).to.have.status(200);",
                  "pm.expect(jsonData.statusCode).to.be.equal(200);",
                  "});",
                  "",
                  "pm.test(\"Should not be empty\", function() {",
                  "var jsonData = pm.response.json();",
                  "pm.expect(jsonData.message).to.not.be.null;",
                  "pm.expect(jsonData.message).to.be.an('array').that.is.not.empty;",
                  "});",
                  "",
                  "pm.test(\"If given location is valid city name\", function() {",
                  "var path = pm.request.url.path; ",
                  "var param = path[5].split('+')[0].toUpperCase();",
                  "pm.expect(path).to.be.an('array').that.is.not.empty;",
                  "pm.expect(param).to.be.a('string');",
                  "pm.expect(param).to.equal('ELKHART');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{API_BASE_URL}}/public/v1/fulfillments/referrals/cvso/elkhart",
              "host": ["{{API_BASE_URL}}"],
              "path": [
                "public",
                "v1",
                "fulfillments",
                "referrals",
                "cvso",
                "elkhart"
              ]
            }
          },
          "response": []
        },
        {
          "name": "referrals - cvso (ALL COUNTIES + ANDERSON)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "",
                "exec": [
                  "pm.test(\"Should Succeed\", function() {",
                  "var jsonData = pm.response.json();",
                  "pm.expect(pm.response).to.have.status(200);",
                  "pm.expect(jsonData.statusCode).to.be.equal(200);",
                  "});",
                  "",
                  "pm.test(\"Should not be empty\", function() {",
                  "var jsonData = pm.response.json();",
                  "pm.expect(jsonData.message).to.not.be.null;",
                  "pm.expect(jsonData.message).to.be.an('array').that.is.not.empty;",
                  "});",
                  "",
                  "pm.test(\"If given location is valid county name\", function() {",
                  "var path = pm.request.url.path; ",
                  "var param = path[5].split('+')[0].toUpperCase();",
                  "pm.expect(path).to.be.an('array').that.is.not.empty;",
                  "pm.expect(param).to.be.a('string');",
                  "pm.expect(param).to.equal('ANDERSON');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{API_BASE_URL}}/public/v1/fulfillments/referrals/cvso/anderson",
              "host": ["{{API_BASE_URL}}"],
              "path": [
                "public",
                "v1",
                "fulfillments",
                "referrals",
                "cvso",
                "anderson"
              ]
            }
          },
          "response": []
        },
        {
          "name": "referrals - If given slug is invalid should fail",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "",
                "exec": [
                  "pm.test(\"Should fail\", function() {",
                  "var jsonData = pm.response.json();",
                  "pm.expect(jsonData.message).to.not.be.null;",
                  "pm.expect(jsonData.message).to.be.an('string').that.is.not.empty;",
                  "pm.expect(jsonData.message).to.equal('Sorry, something went wrong! Please try again later.');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{API_BASE_URL}}/public/v1/fulfillments/referrals/mvbm/noname",
              "host": ["{{API_BASE_URL}}"],
              "path": [
                "public",
                "v1",
                "fulfillments",
                "referrals",
                "mvbm",
                "noname"
              ]
            }
          },
          "response": []
        },
        {
          "name": "referrals - mvpn (ALL COUNTIES + noname)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "",
                "exec": [
                  "pm.test(\"Should Succeed\", function() {var jsonData = pm.response.json();",
                  "pm.expect(pm.response).to.have.status(200);",
                  "pm.expect(jsonData.statusCode).to.be.equal(200);",
                  "});",
                  "",
                  "pm.test(\"Should not be empty\", function() {",
                  "var jsonData = pm.response.json();",
                  "pm.expect(jsonData.message).to.not.be.null;",
                  "pm.expect(jsonData.message).to.be.an('array').that.is.not.empty;",
                  "});",
                  "",
                  "pm.test(\"If given location is invalid county or city name\", function() {",
                  "var path = pm.request.url.path; ",
                  "var param = path[5].split('+')[0].toUpperCase();",
                  "pm.expect(path).to.be.an('array').that.is.not.empty;",
                  "pm.expect(param).to.be.a('string');",
                  "pm.expect(param).to.equal('NONAME');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{API_BASE_URL}}/public/v1/fulfillments/referrals/mvpn/noname",
              "host": ["{{API_BASE_URL}}"],
              "path": [
                "public",
                "v1",
                "fulfillments",
                "referrals",
                "mvpn",
                "noname"
              ]
            }
          },
          "response": []
        },
        {
          "name": "referrals - mvpn (ALL COUNTIES + ELKHART)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "",
                "exec": [
                  "pm.test(\"Should Succeed\", function() {var jsonData = pm.response.json();",
                  "pm.expect(pm.response).to.have.status(200);",
                  "pm.expect(jsonData.statusCode).to.be.equal(200);",
                  "});",
                  "",
                  "pm.test(\"Should not be empty\", function() {",
                  "var jsonData = pm.response.json();",
                  "pm.expect(jsonData.message).to.not.be.null;",
                  "pm.expect(jsonData.message).to.be.an('array').that.is.not.empty;",
                  "});",
                  "",
                  "pm.test(\"If given location is valid city name\", function() {",
                  "var path = pm.request.url.path; ",
                  "var param = path[5].split('+')[0].toUpperCase();",
                  "pm.expect(path).to.be.an('array').that.is.not.empty;",
                  "pm.expect(param).to.be.a('string');",
                  "pm.expect(param).to.equal('ELKHART');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{API_BASE_URL}}/public/v1/fulfillments/referrals/mvpn/elkhart",
              "host": ["{{API_BASE_URL}}"],
              "path": [
                "public",
                "v1",
                "fulfillments",
                "referrals",
                "mvpn",
                "elkhart"
              ]
            }
          },
          "response": []
        },
        {
          "name": "referrals - mvpn (ALL COUNTIES + ANDERSON)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "",
                "exec": [
                  "pm.test(\"Should Succeed\", function() {var jsonData = pm.response.json();",
                  "pm.expect(pm.response).to.have.status(200);",
                  "pm.expect(jsonData.statusCode).to.be.equal(200);",
                  "});",
                  "",
                  "pm.test(\"Should not be empty\", function() {",
                  "var jsonData = pm.response.json();",
                  "pm.expect(jsonData.message).to.not.be.null;",
                  "pm.expect(jsonData.message).to.be.an('array').that.is.not.empty;",
                  "});",
                  "",
                  "pm.test(\"If given location is valid county name\", function() {",
                  "var path = pm.request.url.path; ",
                  "var param = path[5].split('+')[0].toUpperCase();",
                  "pm.expect(path).to.be.an('array').that.is.not.empty;",
                  "pm.expect(param).to.be.a('string');",
                  "pm.expect(param).to.equal('ANDERSON');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{API_BASE_URL}}/public/v1/fulfillments/referrals/mvpn/anderson",
              "host": ["{{API_BASE_URL}}"],
              "path": [
                "public",
                "v1",
                "fulfillments",
                "referrals",
                "mvpn",
                "anderson"
              ]
            }
          },
          "response": []
        }
      ]
    }
  ]
}
